library(randomForest)
setwd("C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction")
var_texto = "
This shiny app will help you with your technical analysis of the stock
marquet. You can load you data in the 'Try with your company data', or you
can see how these app work in 'Own stock data'
"
var_texto_mitfm = "
En esta aplicación encontraremos una ayuda para la predicción de los datos
de apertura y cierre en el mercado de valores usando modelos de datos temporales.
Podremos cargar los nuestros propios en el formato adecuado o ver algunos ejemplos
de empresas elegidas por el autor
"
GDatasets = c("C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction/Data/TSLA.csv",
"C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction/Data/SP500.csv",
"C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction/Data/abengoa.csv",
"C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction/Data/repsol.csv")
datos <- read.csv("C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction/Data/TSLA.csv")
var_selec = c(1,2,5) #Date, Open, Close
# Read data
weather <- read.csv(text = getURL("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv") )
# Build model
model <- randomForest(play ~ ., data = weather, ntree = 500, mtry = 4, importance = TRUE)
shiny::runApp('Script')
runApp('Script')
runApp('Script')
runApp('Script')
runApp('Script')
runApp('Script')
install.packages("vctrs")
install.packages("vctrs")
shiny::runApp('Script')
# Read data
weather <- read.csv("C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction/Data/wheater.csv")
# Build model
model <- randomForest(play ~ ., data = weather, ntree = 500, mtry = 4, importance = TRUE)
runApp('Script')
datos <- read.csv("C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction/Data/TSLA.csv")
var_selec = c(1,2,5) #Date, Open, Close
# Read data
weather <- read.csv("C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction/Data/wheater.csv")
# Build model
model <- randomForest(play ~ ., data = weather, ntree = 500, mtry = 4, importance = TRUE)
weather
class(weather)
class(weather)
class(weather$play)
weather$play <- as.factor(weather$play)
# Build model
model <- randomForest(play ~ ., data = weather, ntree = 500, mtry = 4, importance = TRUE)
runApp('Script')
runApp('Script')
weather
weather$play <- as.factor(weather$outllok)
weather$play <- as.factor(weather$windy)
weather$play <- as.factor(weather$outllok)
# Read data
weather <- read.csv("C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction/Data/wheater.csv")
weather$play <- as.factor(weather$play)
weather$windy <- as.factor(weather$windy)
weather$outllok <- as.factor(weather$outllok)
weather$outlook <- as.factor(weather$outlook)
runApp('Script')
# Read data
weather <- read.csv("C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction/Data/wheater.csv")
weather$play <- as.factor(weather$play)
weather$outlook <- as.factor(weather$outlook)
weather$outlook <- as.factor(weather$outlook, levels = c("overcast", "rainy", "sunny"))
# Read data
weather <- read.csv("C:/Users/12421/OneDrive/Escritorio/Master-BD-DS/Asignaturas/DSBI/Entregables/shiny/Stock_prediction/Data/wheater.csv")
weather$play <- as.factor(weather$play)
weather$outlook <- as.factor(weather$outlook, levels = c("overcast", "rainy", "sunny"))
weather
weather
runApp('Script')
runApp('Script')
runApp('Script')
runApp('Script')
runApp('Script')
runApp('Script')
runApp('Script')
runApp('Script')
runApp('Script')
GDatasets = c("TSLA.csv","SP500.csv","abengoa.csv","repsol.csv")
datos <- read.csv("TSLA.csv")
datos <- read.csv("/www/TSLA.csv")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
datos
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('config')
runApp()
runApp()
install.packages('bea.R')
runApp()
install.packages('gtrendsR')
runApp()
install.packages('tidytext')
runApp()
install.packages('prophet')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
datos
class(datos$Date)
datos$Date
runApp()
runApp()
as.yearmon(as.Date(datos$Date)
)
as.Date(as.yearmon(as.Date(datos$Date)))
runApp()
runApp()
datos
coso <- datos[,c(1,2)]
cos
coso
View(datos)
View(datos)
coso_ts <- ts(coso[,2])
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
